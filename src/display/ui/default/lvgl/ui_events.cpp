// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.0
// LVGL version: 8.3.11
// Project name: GaggiMate

#include "../../../main.h"
#include "ui.h"
#include <Arduino.h>

void onBrewCancel(lv_event_t *e) {
    controller.deactivate();
    controller.clear();
}

void onBrewStart(lv_event_t *e) { controller.activate(); }

void onBrewTempLower(lv_event_t *e) { controller.lowerTemp(); }

void onBrewTempRaise(lv_event_t *e) { controller.raiseTemp(); }

void onBrewTimeLower(lv_event_t *e) { controller.lowerBrewTarget(); }

void onBrewTimeRaise(lv_event_t *e) { controller.raiseBrewTarget(); }

void onSteamTempLower(lv_event_t *e) { controller.lowerTemp(); }

void onSteamTempRaise(lv_event_t *e) { controller.raiseTemp(); }

void onBrewScreen(lv_event_t *e) {
    controller.getUI()->changeScreen(&ui_BrewScreen, &ui_BrewScreen_screen_init);
    controller.deactivate();
    controller.setMode(MODE_BREW);
}

void onWaterScreen(lv_event_t *e) {
    controller.getUI()->changeScreen(&ui_SimpleProcessScreen, &ui_SimpleProcessScreen_screen_init);
    controller.setMode(MODE_WATER);
    controller.deactivate();
}

void onSteamScreen(lv_event_t *e) {
    controller.getUI()->changeScreen(&ui_SimpleProcessScreen, &ui_SimpleProcessScreen_screen_init);
    controller.setMode(MODE_STEAM);
    controller.deactivate();
}

void onWakeup(lv_event_t *e) {
    controller.getUI()->changeScreen(&ui_BrewScreen, &ui_BrewScreen_screen_init);
    controller.deactivate();
    controller.setMode(MODE_BREW);
}

void onLoadStarted(lv_event_t *e) { controller.onScreenReady(); }

void onStandby(lv_event_t *e) { controller.activateStandby(); }

void onGrindToggle(lv_event_t *e) { controller.isGrindActive() ? controller.deactivateGrind() : controller.activateGrind(); }

void onGrindTimeLower(lv_event_t *e) { controller.lowerGrindTarget(); }

void onGrindTimeRaise(lv_event_t *e) { controller.raiseGrindTarget(); }

void onMenuClick(lv_event_t *e) {
    controller.deactivate();
    controller.setMode(MODE_BREW);
    controller.getUI()->changeScreen(&ui_MenuScreen, &ui_MenuScreen_screen_init);
}

void onGrindScreen(lv_event_t *e) {
    controller.getUI()->changeScreen(&ui_GrindScreen, &ui_GrindScreen_screen_init);
    controller.setMode(MODE_GRIND);
}

void onTimedClick(lv_event_t *e) {
    controller.onTargetChange(ProcessTarget::TIME);
    controller.getUI()->markDirty();
}

void onVolumetricClick(lv_event_t *e) {
    controller.onTargetChange(ProcessTarget::VOLUMETRIC);
    controller.getUI()->markDirty();
}

void onPreviousProfile(lv_event_t *e) { controller.getUI()->onPreviousProfile(); }

void onNextProfile(lv_event_t *e) { controller.getUI()->onNextProfile(); }

void onProfileLoad(lv_event_t *e) { controller.getUI()->onProfileSelect(); }

void onProfileSelect(lv_event_t *e) { controller.getUI()->onProfileSwitch(); }

void onFlush(lv_event_t *e) { controller.onFlush(); }

void onSimpleProcessToggle(lv_event_t *e) {
    if (controller.getMode() != MODE_STEAM) {
        controller.isActive() ? controller.deactivate() : controller.activate();
    }
}

void onProfileScreenLoad(lv_event_t *e) {
    lv_obj_set_ext_click_area(ui_ProfileScreen_previousProfileBtn, 30);
    lv_obj_set_ext_click_area(ui_ProfileScreen_nextProfileBtn, 30);
    lv_obj_set_ext_click_area(ui_ProfileScreen_chooseButton, 30);
    lv_obj_set_ext_click_area(ui_ProfileScreen_ImgButton1, 20);
}

void onMenuScreenLoad(lv_event_t *e) {
    lv_obj_set_ext_click_area(ui_MenuScreen_btnBrew, 15);
    lv_obj_set_ext_click_area(ui_MenuScreen_btnSteam, 15);
    lv_obj_set_ext_click_area(ui_MenuScreen_waterBtn, 15);
    lv_obj_set_ext_click_area(ui_MenuScreen_grindBtn, 15);
    lv_obj_set_ext_click_area(ui_MenuScreen_standbyButton, 20);
}

void onBrewScreenLoad(lv_event_t *e) {
    lv_obj_set_ext_click_area(ui_BrewScreen_startButton, 25);
    lv_obj_set_ext_click_area(ui_BrewScreen_profileSelectBtn, 25);
    lv_obj_set_ext_click_area(ui_BrewScreen_ImgButton5, 20);
}

void onSimpleProcessScreenLoad(lv_event_t *e) {
    lv_obj_set_ext_click_area(ui_SimpleProcessScreen_downTempButton, 40);
    lv_obj_set_ext_click_area(ui_SimpleProcessScreen_upTempButton, 40);
    lv_obj_set_ext_click_area(ui_SimpleProcessScreen_goButton, 25);
    lv_obj_set_ext_click_area(ui_SimpleProcessScreen_ImgButton6, 20);
}

void onStatusScreenLoad(lv_event_t *e) {
    lv_obj_set_ext_click_area(ui_StatusScreen_pauseButton, 25);
    lv_obj_set_ext_click_area(ui_StatusScreen_ImgButton8, 20);
}

void onGrindScreenLoad(lv_event_t *e) {
    lv_obj_set_ext_click_area(ui_GrindScreen_upDurationButton, 40);
    lv_obj_set_ext_click_area(ui_GrindScreen_downDurationButton, 40);
    lv_obj_set_ext_click_area(ui_GrindScreen_startButton, 25);
    lv_obj_set_ext_click_area(ui_GrindScreen_ImgButton2, 20);
}
